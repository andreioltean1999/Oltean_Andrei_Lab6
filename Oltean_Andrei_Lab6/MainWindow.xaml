<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Oltean_Andrei_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Oltean_Andrei_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key= "validationTEmplate">
                         <DockPanel>
                             <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                             <AdornedElementPlaceholder/>
                         </DockPanel>
            </ControlTemplate>
        <Style x:Key= "textBoxInError" TargetType= "{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value=" true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path= (Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="352" Margin="26,30,0,0" VerticalAlignment="Top" Width="743">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>

                        <ColumnDefinition Width="28*"/>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="18*"/>
                        <ColumnDefinition Width="574*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="143,31,32.6,172" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="7">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="207,203,0,0" VerticalAlignment="Top" Grid.Column="7" Height="96" Width="203">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="28,34,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="4" Height="19"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="28,88,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="4" Height="19" Click="btnEdit_Click"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="28,133,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="4" Height="19"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="468,171,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click" Grid.Column="7" Height="19"/>
                    <Button x:Name="btnPrevious" Content="Pevious" HorizontalAlignment="Left" Margin="143,171,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevious_Click" Grid.Column="7" Height="19"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="28,206,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click" Grid.ColumnSpan="4" Height="19">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value=" false"/>
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="28,255,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="4" Height="19"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}" Margin="0,0,-0.4,0">
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="286,27,52,171" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="392,192,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNewI" Content="New" HorizontalAlignment="Left" Margin="60,46,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnEditI" Content="Edit" HorizontalAlignment="Left" Margin="60,104,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnDeleteI" Content="Delete" HorizontalAlignment="Left" Margin="60,158,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnNextI" Content="Next" HorizontalAlignment="Left" Margin="611,163,0,0" VerticalAlignment="Top" Width="75" Click="btnNextI_Click"/>
                    <Button x:Name="btnPreviousI" Content="Previous" HorizontalAlignment="Left" Margin="286,163,0,0" VerticalAlignment="Top" Width="75" Click="btnPreviousI_Click"/>
                    <Button x:Name="btnSaveI" Content="Save" HorizontalAlignment="Left" Margin="60,227,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveI_Click"/>
                    <Button x:Name="btnCancelI" Content="Cancel" HorizontalAlignment="Left" Margin="60,273,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}" Margin="0,-17,-0.4,-20">
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="214,106,123.6,81" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn1" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="custIdColumn1" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="orderIdColumn" Binding="{Binding OrderId}" Header="Order Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ComboBox HorizontalAlignment="Left" Margin="214,44,0,0" VerticalAlignment="Top" Width="120" x:Name="cmbCustomers" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox HorizontalAlignment="Left" Margin="496,44,0,0" VerticalAlignment="Top" Width="120" x:Name="cmbInventory">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path= "Make"/>
                                            <Binding Path="Color"/>

                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Customers" HorizontalAlignment="Left" Margin="250,18,0,0" VerticalAlignment="Top"/>
                    <Label Content="Inventory" HorizontalAlignment="Left" Margin="541,10,0,0" VerticalAlignment="Top"/>
                    <Button x:Name="btnNewO" Content="New" HorizontalAlignment="Left" Margin="40,52,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnEditO" Content="Edit" HorizontalAlignment="Left" Margin="40,106,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnDeleteO" Content="Delete" HorizontalAlignment="Left" Margin="40,151,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnSaveO" Content="Save" HorizontalAlignment="Left" Margin="40,235,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveO_Click"/>
                    <Button x:Name="btnCancelO" Content="Cancel" HorizontalAlignment="Left" Margin="40,286,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnNextO" Content="Next" HorizontalAlignment="Left" Margin="539,291,0,0" VerticalAlignment="Top" Width="75" Click="btnNextO_Click"/>
                    <Button x:Name="btnPreviousO" Content="Previous" HorizontalAlignment="Left" Margin="214,291,0,0" VerticalAlignment="Top" Width="75" Click="btnPreviousO_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
